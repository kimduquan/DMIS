<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging"/>
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data"/>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>
  <loggingConfiguration name="Logging Application Block" tracingEnabled="false" defaultCategory="General" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add fileName="adsync.log" footer="" formatter="AdSync Text Formatter" header="" rollFileExistsBehavior="Increment" rollInterval="None" rollSizeKB="200" timeStampPattern="yyyy-MM-dd" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" traceOutputOptions="None" filter="All" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" name="AdSync Flat File Trace Listener"/>
      <add source="Enterprise Library Logging" formatter="" log="Application" machineName="" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" traceOutputOptions="None" filter="All" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" name="Application EventLog TraceListener"/>
      <add databaseInstanceName="SnCrMsSql" writeLogStoredProcName="proc_LogWrite" addCategoryStoredProcName="proc_LogAddCategory" formatter="SnXmlFormatter" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Database.Configuration.FormattedDatabaseTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging.Database" traceOutputOptions="None" filter="All" type="Microsoft.Practices.EnterpriseLibrary.Logging.Database.FormattedDatabaseTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging.Database" name="Database Trace Listener"/>
      <add listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.CustomTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" traceOutputOptions="None" filter="All" type="Diagnostics.OneLineTraceListener, Storage, Version=5.9.1.2, Culture=neutral, PublicKeyToken=null" name="Debug Trace Listener" initializeData="" formatter="OneLineFormatter"/>
      <add source="Instrumentation" formatter="Text Formatter" log="DMIS" machineName="" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" traceOutputOptions="None" filter="Information" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" name="EventLog TraceListener"/>
    </listeners>
    <formatters>
      <add template="{timestamp} {severity} {message} {keyvalue(Messages)}" type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging" name="AdSync Text Formatter"/>
      <add template="{severity} {category} {message}: Properties: {dictionary({key}={value};)}; Timestamp: {timestamp}; Machine: {machine}; AppDomain: {appDomain}; ProcessId: {processId}; Process: {processName}; Win32ThreadId: {win32ThreadId}; ThreadName: {threadName}" type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging" name="OneLineFormatter"/>
      <add template="Timestamp: {timestamp}
Message: {message}
Category: {category}
Priority: {priority}
EventId: {eventid}
Severity: {severity}
Title:{title}
Machine: {machine}
Application Domain: {appDomain}
Process Id: {processId}
Process Name: {processName}
Win32 Thread Id: {win32ThreadId}
Thread Name: {threadName}
Extended Properties: {dictionary({key} - {value}
)}" type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging" name="Text Formatter"/>
      <add type="ContentRepository.Storage.Diagnostics.SnXmlFormatter, Storage" name="SnXmlFormatter"/>
    </formatters>
    <categorySources>
      <add switchValue="All" name="AdSync">
        <listeners>
          <add name="AdSync Flat File Trace Listener"/>
        </listeners>
      </add>
      <add switchValue="All" name="Audit">
        <listeners>
          <add name="Database Trace Listener"/>
          <add name="Debug Trace Listener"/>
        </listeners>
      </add>
      <add switchValue="All" name="General">
        <listeners>
          <add name="Debug Trace Listener"/>
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events">
        <listeners>
          <add name="EventLog TraceListener"/>
        </listeners>
      </allEvents>
      <notProcessed switchValue="All" name="Unprocessed Category"/>
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="EventLog TraceListener"/>
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <unity>
    <typeAliases>
      <!-- Provider aliases -->
      <typeAlias alias="IApplicationCache" type="ContentRepository.Storage.AppModel.IApplicationCache, Storage"/>
      <!--<typeAlias alias="IActionFactory" type="ContentRepository.IActionFactory, ContentRepository" />-->
      <typeAlias alias="ISearchEngine" type="ContentRepository.Storage.Search.ISearchEngine, Storage"/>
      <!-- Provider implementation aliases -->
      <typeAlias alias="IApplicationCacheImpl" type="ContentRepository.ApplicationCache, ContentRepository"/>
      <!--<typeAlias alias="IActionFactoryImpl" type="Portal.PortalActionLinkManager, Portal" />-->
      <typeAlias alias="ISearchEngineImpl" type="Search.LuceneSearchEngine, ContentRepository"/>
    </typeAliases>
    <containers>
      <container name="Providers">
        <types>
          <!-- Binding providers to implementations -->
          <type type="IApplicationCache" mapTo="IApplicationCacheImpl"/>
          <!--<type type="IActionFactory" mapTo="IActionFactoryImpl" />-->
          <type type="ISearchEngine" mapTo="ISearchEngineImpl"/>
        </types>
      </container>
    </containers>
  </unity>
  <appSettings>
    <add key="SpecialWorkingMode" value="Export"/>

    <add key="DataProvider" value="ContentRepository.Storage.Data.SqlClient.SqlProvider"/>
    <add key="AccessProvider" value="ContentRepository.Security.DesktopAccessProvider"/>
    <add key="DefaultLockTimeout" value="60"/>
    <add key="ScriptMode" value="Release"/>
    <!--<add key="ClusterChannelProvider" value="Communication.Messaging.MsmqChannelProvider, MsmqChannel" />-->
    <!--<add key="ClusterChannelProvider" value="Communication.Messaging.MsmqChannelProvider" />
    <add key="MsmqChannelQueueName" value=".\private$\ryan" />-->
    <add key="BackwardCompatibilityXmlNamespaces" value="true"/>
    <!-- Default IndexDirectoryPath: 'LuceneIndex' directory in the parent of executing assembly codebase.
    Configured path can be absolute or relative. -->
    <add key="IndexDirectoryPath" value="..\App_Data\LuceneIndex_Export"/>
    <add key="EnableOuterSearchEngine" value="true"/>
    <!-- structure -->
    <add key="ContentTemplateFolderPath" value="/Root/ContentTemplates"/>
    <add key="IMSFolderPath" value="/Root/IMS"/>
    <add key="ResourceFolderPath" value="/Root/Localization"/>
    <add key="SkinRootFolderPath" value="/Root/Skins"/>
    <add key="SkinGlobalFolderPath" value="/Root/Global"/>
    <add key="PageTemplateFolderPath" value="/Root/Global/PageTemplates"/>
    <add key="ClientSettingsProvider.ServiceUri" value=""/>
  </appSettings>
  <connectionStrings>
    <add name="SnCrMsSql" connectionString="Persist Security Info=False;Initial Catalog=ContentRepository;Data Source=MyContentRepositoryDatasource;Integrated Security=true" providerName="System.Data.SqlClient"/>
  </connectionStrings>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri=""/>
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400"/>
      </providers>
    </roleManager>
  </system.web>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/>
  </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-2.1.0.0" newVersion="2.1.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-2.0.2.0" newVersion="2.0.2.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30AD4FE6B2A6AEED" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
